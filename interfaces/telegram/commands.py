"""
–ú–æ–¥—É–ª—å —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥ –¥–ª—è Telegram-–±–æ—Ç–∞.
–°–æ–¥–µ—Ä–∂–∏—Ç –∫–æ–Ω—Å—Ç–∞–Ω—Ç—ã –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è —Å–ø–∏—Å–∫–∞ –∫–æ–º–∞–Ω–¥ –±–æ—Ç–∞.
"""

from dataclasses import dataclass
from typing import List, Optional


@dataclass
class BotCommand:
    """–ö–ª–∞—Å—Å –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—é—â–∏–π –∫–æ–º–∞–Ω–¥—É Telegram-–±–æ—Ç–∞."""
    command: str
    description: str
    detailed_help: str = ""
    
    def get_help(self) -> str:
        """–ü–æ–ª—É—á–∏—Ç—å –ø–æ–ª–Ω—ã–π —Ç–µ–∫—Å—Ç —Å–ø—Ä–∞–≤–∫–∏ –ø–æ –∫–æ–º–∞–Ω–¥–µ."""
        if self.detailed_help:
            return f"*{self.command}* - {self.description}\n\n{self.detailed_help}"
        return f"*{self.command}* - {self.description}"


# –°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥ –±–æ—Ç–∞
COMMANDS = [
    BotCommand(
        command="/start",
        description="–ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º",
        detailed_help="–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —ç—Ç—É –∫–æ–º–∞–Ω–¥—É –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º –∏ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏—è—Ö."
    ),
    BotCommand(
        command="/help",
        description="–°–ø—Ä–∞–≤–∫–∞ –ø–æ –±–æ—Ç—É",
        detailed_help="–í—ã–≤–æ–¥–∏—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥ —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º."
    ),
    BotCommand(
        command="/stats",
        description="–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –∫–æ–¥–æ–≤–æ–π –±–∞–∑–µ",
        detailed_help="–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –æ–±—â—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ –∫–æ–¥–æ–≤–æ–π –±–∞–∑–µ: –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–ª–∞—Å—Å–æ–≤, –º–µ—Ç–æ–¥–æ–≤, —Ñ–∞–π–ª–æ–≤ –∏ —Ç.–¥."
    ),
    BotCommand(
        command="/file",
        description="–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ñ–∞–π–ª–µ",
        detailed_help="–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ `/file <–ø—É—Ç—å_–∫_—Ñ–∞–π–ª—É>` —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–ª–∞—Å—Å–∞—Ö –∏ –º–µ—Ç–æ–¥–∞—Ö –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–º —Ñ–∞–π–ª–µ."
    ),
    BotCommand(
        command="/classes",
        description="–°–ø–∏—Å–æ–∫ –∫–ª–∞—Å—Å–æ–≤",
        detailed_help="–í—ã–≤–æ–¥–∏—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∫–ª–∞—Å—Å–æ–≤ –≤ –∫–æ–¥–æ–≤–æ–π –±–∞–∑–µ. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ `/classes <–ø–æ–∏—Å–∫–æ–≤—ã–π_–∑–∞–ø—Ä–æ—Å>` –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –ø–æ –∏–º–µ–Ω–∏ –∫–ª–∞—Å—Å–∞."
    ),
    BotCommand(
        command="/methods",
        description="–ú–µ—Ç–æ–¥—ã –∫–ª–∞—Å—Å–∞",
        detailed_help="–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ `/methods <–∏–º—è_–∫–ª–∞—Å—Å–∞>` –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –≤—Å–µ—Ö –º–µ—Ç–æ–¥–æ–≤ —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –∫–ª–∞—Å—Å–∞."
    ),
    BotCommand(
        command="/sample",
        description="–ü—Ä–∏–º–µ—Ä—ã –∫–æ–¥–∞",
        detailed_help="–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ `/sample <–∑–∞–ø—Ä–æ—Å>` –¥–ª—è –ø–æ–∏—Å–∫–∞ –ø—Ä–∏–º–µ—Ä–æ–≤ –∫–æ–¥–∞ –ø–æ —É–∫–∞–∑–∞–Ω–Ω–æ–º—É –∑–∞–ø—Ä–æ—Å—É."
    )
]


def get_commands_for_telegram() -> List[dict]:
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥ –≤ —Ñ–æ—Ä–º–∞—Ç–µ, –ø–æ–Ω—è—Ç–Ω–æ–º –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –≤ Telegram API.
    
    Returns:
        –°–ø–∏—Å–æ–∫ —Å–ª–æ–≤–∞—Ä–µ–π —Å –∫–ª—é—á–∞–º–∏ 'command' –∏ 'description'
    """
    return [
        {"command": cmd.command.lstrip("/"), "description": cmd.description}
        for cmd in COMMANDS
    ]


def get_help_text() -> str:
    """
    –§–æ—Ä–º–∏—Ä—É–µ—Ç —Ç–µ–∫—Å—Ç —Å–ø—Ä–∞–≤–∫–∏ —Å–æ —Å–ø–∏—Å–∫–æ–º –≤—Å–µ—Ö –∫–æ–º–∞–Ω–¥.
    
    Returns:
        –°—Ç—Ä–æ–∫–∞ —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º –≤—Å–µ—Ö –∫–æ–º–∞–Ω–¥ –≤ —Ñ–æ—Ä–º–∞—Ç–µ Markdown
    """
    help_text = "*ü§ñ –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:*\n\n"
    
    for cmd in COMMANDS:
        help_text += f"{cmd.command} - {cmd.description}\n"
    
    help_text += "\n_–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /help <–∫–æ–º–∞–Ω–¥–∞> –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–µ—Ç–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –∫–æ–º–∞–Ω–¥–µ._"
    
    return help_text


def get_command_help(command_name: str) -> Optional[str]:
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –¥–µ—Ç–∞–ª—å–Ω—É—é —Å–ø—Ä–∞–≤–∫—É –ø–æ —É–∫–∞–∑–∞–Ω–Ω–æ–π –∫–æ–º–∞–Ω–¥–µ.
    
    Args:
        command_name: –ò–º—è –∫–æ–º–∞–Ω–¥—ã –±–µ–∑ —Å–ª–µ—à–∞ –≤ –Ω–∞—á–∞–ª–µ –∏–ª–∏ —Å –Ω–∏–º
        
    Returns:
        –¢–µ–∫—Å—Ç —Å–ø—Ä–∞–≤–∫–∏ –ø–æ –∫–æ–º–∞–Ω–¥–µ –∏–ª–∏ None, –µ—Å–ª–∏ –∫–æ–º–∞–Ω–¥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞
    """
    # –ù–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è –∏–º–µ–Ω–∏ –∫–æ–º–∞–Ω–¥—ã
    if not command_name.startswith("/"):
        command_name = f"/{command_name}"
    
    for cmd in COMMANDS:
        if cmd.command == command_name:
            return cmd.get_help()
    
    return None 